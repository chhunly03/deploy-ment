name: deploy

on:
  push:
    branches:
      - main

# Ensure only one deploy workflow runs at a time
concurrency:
  group: "deploy-main"
  cancel-in-progress: true

jobs:
  # Notify on push
  notify-push:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (push)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="üìå Code pushed by ${{ github.actor }} to ${{ github.repository }} (branch: ${{ github.ref_name }})"

  # Deploy to Vercel
  deploy:
    needs: notify-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Vercel
        run: |
          if [ -z "$VERCEL_DEPLOY_HOOK" ]; then
            echo "‚ùå ERROR: VERCEL_DEPLOY_HOOK is not set."
            exit 1
          fi
          echo "üöÄ Triggering Vercel deploy for commit $GITHUB_SHA"
          curl -s -X POST "$VERCEL_DEPLOY_HOOK"
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}

  # Notify on success
  notify-success:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (success)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="‚úÖ Deployment successful for ${{ github.repository }} by ${{ github.actor }} (commit: ${{ github.sha }})"

  # Notify on failure
  notify-failure:
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (failure)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="‚ùå Deployment failed for ${{ github.repository }} by ${{ github.actor }} (commit: ${{ github.sha }})"
