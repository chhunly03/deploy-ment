name: deploy-alert

on:
  push:
    branches:
      - main  # Change branch if needed

jobs:
  notify-push:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (push)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="üìå Code pushed by *${{ github.actor }}* to *${{ github.repository }}* on branch *${{ github.ref_name }}* with commit message: _${{ github.event.head_commit.message }}_" \
          -d parse_mode="Markdown"

  deploy:
    needs: notify-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Vercel
        run: |
          if [ -z "$VERCEL_DEPLOY_HOOK" ]; then
            echo "‚ùå ERROR: VERCEL_DEPLOY_HOOK is not set."
            exit 1
          fi

          echo "üöÄ Triggering Vercel deployment..."
          response=$(curl -s -w "%{http_code}" -o /tmp/vercel_response.txt -X POST "$VERCEL_DEPLOY_HOOK")
          if [ "$response" -ne 200 ] && [ "$response" -ne 201 ]; then
            echo "‚ùå Vercel deploy failed! Response code: $response"
            cat /tmp/vercel_response.txt
            exit 1
          fi
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}

  notify-success:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Notify Telegram (success)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="üöÄ Pipeline Notification
Status: SUCCESS ‚úÖ
Application: *${{ github.repository }}*
Branch: *${{ github.ref_name }}*
Committer: *${{ github.actor }}*
Commit ID: _${{ github.event.head_commit.id }}_" \
          -d parse_mode="Markdown"

  notify-failure:
    needs: deploy
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    steps:
      - name: Notify Telegram (failure)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="üöÄ Pipeline Notification
Status: FAILURE ‚ùå
Application: *${{ github.repository }}*
Branch: *${{ github.ref_name }}*
Committer: *${{ github.actor }}*
Commit ID: _${{ github.event.head_commit.id }}_" \
          -d parse_mode="Markdown"
