name: Deploy & Notify

on:
  push:
    branches:
      - main

jobs:
  # 1Ô∏è‚É£ Notify on push
  notify-push:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (push)
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="üìå Code pushed by *${{ github.actor }}* to *${{ github.repository }}* on branch *${{ github.ref_name }}* with commit message: _${{ github.event.head_commit.message }}_" \
          -d parse_mode="Markdown"

  # 2Ô∏è‚É£ Deploy to Vercel
  deploy:
    needs: notify-push
    runs-on: ubuntu-latest
    outputs:
      deployment_state: ${{ steps.wait.outputs.state }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Trigger Vercel Deployment
        id: trigger
        run: |
          if [ -z "$VERCEL_HOOK_URL" ]; then
            echo "‚ùå ERROR: VERCEL_HOOK_URL is not set."
            exit 1
          fi
          echo "üöÄ Triggering Vercel deployment..."
          RESPONSE=$(curl -s -X POST "$VERCEL_HOOK_URL")
          echo "Vercel response: $RESPONSE"
          DEPLOY_ID=$(echo "$RESPONSE" | jq -r '.job.id')
          echo "Deploy ID: $DEPLOY_ID"
          echo "deploy_id=$DEPLOY_ID" >> $GITHUB_OUTPUT
        env:
          VERCEL_HOOK_URL: ${{ secrets.VERCEL_HOOK_URL }}

      - name: Wait for Deployment
        id: wait
        run: |
          DEPLOY_ID="${{ steps.trigger.outputs.deploy_id }}"
          if [ "$DEPLOY_ID" == "null" ] || [ -z "$DEPLOY_ID" ]; then
            echo "‚ùå ERROR: Failed to get deployment ID."
            echo "state=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
          echo "Waiting for Vercel deployment $DEPLOY_ID..."
          while true; do
            STATUS=$(curl -s "https://api.vercel.com/v6/deployments/$DEPLOY_ID" | jq -r '.state')
            echo "Current status: $STATUS"
            if [ "$STATUS" == "READY" ]; then
              echo "‚úÖ Deployment successful!"
              echo "state=success" >> $GITHUB_OUTPUT
              break
            elif [ "$STATUS" == "ERROR" ]; then
              echo "‚ùå Deployment failed!"
              echo "state=failure" >> $GITHUB_OUTPUT
              break
            fi
            sleep 10
          done

  # 3Ô∏è‚É£ Notify result
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (success or failure)
        run: |
          if [ "${{ needs.deploy.outputs.deployment_state }}" == "success" ]; then
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="‚úÖ Deployment successful for *${{ github.repository }}* on branch *${{ github.ref_name }}*" \
            -d parse_mode="Markdown"
          else
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="‚ùå Deployment failed for *${{ github.repository }}* on branch *${{ github.ref_name }}*" \
            -d parse_mode="Markdown"
