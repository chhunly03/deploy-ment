name: deploy

on:
  push:
    branches:
      - main

jobs:
  # Notify on push
  notify-push:
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (push)
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          COMMIT_ID="${{ github.event.head_commit.id }}"
          BRANCH="${{ github.ref_name }}"
          AUTHOR="${{ github.actor }}"

          MESSAGE="üìå Code Pushed
Repository: ${{ github.repository }}
Branch: $BRANCH
Author: $AUTHOR
Commit: _${COMMIT_MESSAGE}_"

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MESSAGE" \
          -d parse_mode="Markdown"

  # Deploy to Vercel
  deploy:
    needs: notify-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Vercel
        run: |
          if [ -z "$VERCEL_DEPLOY_HOOK" ]; then
            echo "‚ùå ERROR: VERCEL_DEPLOY_HOOK is not set. Please add it as a repository secret."
            exit 1
          fi
          curl -s -X POST "$VERCEL_DEPLOY_HOOK"
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}

  # Notify on success
  notify-success:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (success)
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          COMMIT_ID="${{ github.event.head_commit.id }}"
          BRANCH="${{ github.ref_name }}"
          AUTHOR="${{ github.actor }}"
          NAMESPACE="-api-uat"
          APPLICATION="qrtpayment"
          ENVIRONMENT="uat"
          RELEASE_NAME="qrtpayment-uat-release"
          RELEASE_STATUS="deployed"
          VERSION="uat-v0.2.78"
          LAST_DEPLOYED=$(date "+%a %b %d %T %Y")
          BUILD_URL="http://10.11.20.249:8080/job/acleda-api/job/qrt_payment/279/"

          MESSAGE="üöÄ Pipeline Notification
Status: SUCCESS ‚úÖ
Namespace: $NAMESPACE
Application: $APPLICATION
Environment: $ENVIRONMENT
Release Name: $RELEASE_NAME
Last Deployed: $LAST_DEPLOYED
Release Status: $RELEASE_STATUS
Revision: $COMMIT_MESSAGE
Version: $VERSION
Branch: $BRANCH
Committer: $AUTHOR
Commit ID: $COMMIT_ID
üîó View Build Details ($BUILD_URL)"

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MESSAGE" \
          -d parse_mode="Markdown"

  # Notify on failure
  notify-failure:
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (failure)
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          COMMIT_ID="${{ github.event.head_commit.id }}"
          BRANCH="${{ github.ref_name }}"
          AUTHOR="${{ github.actor }}"
          NAMESPACE="-api-uat"
          APPLICATION="qrtpayment"
          ENVIRONMENT="uat"
          RELEASE_NAME="qrtpayment-uat-release"
          VERSION="uat-v0.2.78"
          BUILD_URL="http://10.11.20.249:8080/job/acleda-api/job/qrt_payment/279/"

          MESSAGE="üö® Pipeline Notification
Status: FAILURE ‚ùå
Namespace: $NAMESPACE
Application: $APPLICATION
Environment: $ENVIRONMENT
Release Name: $RELEASE_NAME
Branch: $BRANCH
Committer: $AUTHOR
Commit ID: $COMMIT_ID
Revision: $COMMIT_MESSAGE
üîó View Build Details ($BUILD_URL)"

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="$MESSAGE" \
          -d parse_mode="Markdown"
