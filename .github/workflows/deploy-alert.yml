name: deploy

on:
  push:
    branches:
      - main

jobs:
  notify-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Notify Telegram (push)
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          MESSAGE='üìå Code pushed by *${GITHUB_ACTOR}*\nRepository: *${GITHUB_REPOSITORY}*\nBranch: *${GITHUB_REF_NAME}*\nCommit message: _${COMMIT_MESSAGE}_'
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"

  deploy:
    runs-on: ubuntu-latest
    needs: notify-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Vercel
        run: |
          if [ -z "$VERCEL_DEPLOY_HOOK" ]; then
            echo "‚ùå ERROR: VERCEL_DEPLOY_HOOK is not set. Please add it as a repository secret."
            exit 1
          fi
          RESPONSE=$(curl -s -X POST "$VERCEL_DEPLOY_HOOK")
          echo "Deploy response: $RESPONSE"
        env:
          VERCEL_DEPLOY_HOOK: ${{ secrets.VERCEL_DEPLOY_HOOK }}

  notify-result:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Notify Telegram (success/failure)
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="üöÄ Pipeline Notification - SUCCESS ‚úÖ"
          else
            STATUS="üöÄ Pipeline Notification - FAILURE ‚ùå"
          fi
          MESSAGE='${STATUS}\nApplication: *${GITHUB_REPOSITORY}*\nBranch: *${GITHUB_REF_NAME}*\nCommitter: *${GITHUB_ACTOR}*\nCommit ID: `${GITHUB_SHA}`'
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"